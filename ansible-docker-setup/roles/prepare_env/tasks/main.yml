---
- name: Install required packages (Debian/Ubuntu)
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
  when: ansible_os_family == "Debian"

- name: Install required packages (RedHat/CentOS)
  yum:
    name: "{{ item }}"
    state: present
  loop:
    - yum-utils
    - device-mapper-persistent-data
    - lvm2
  when: ansible_os_family == "RedHat"

- name: Add Docker GPG key (Debian/Ubuntu)
  apt_key:
    url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
    state: present
  when: ansible_os_family == "Debian"

- name: Add Docker repository (Debian/Ubuntu)
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
  when: ansible_os_family == "Debian"

- name: Install Docker (Debian/Ubuntu)
  apt:
    name: docker-ce
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Add Docker repository (RedHat/CentOS)
  yum_repository:
    name: docker
    description: Docker Repository
    baseurl: https://download.docker.com/linux/centos/7/x86_64/stable
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg
    state: present
  when: ansible_os_family == "RedHat"

- name: Install Docker (RedHat/CentOS)
  yum:
    name: docker-ce
    state: present
  when: ansible_os_family == "RedHat"

- name: Start and enable Docker service
  service:
    name: docker
    state: started
    enabled: "{{ start_on_boot == 'yes' }}"

- name: Add user to Docker group
  user:
    name: "{{ docker_user }}"
    groups: docker
    append: yes
  when: docker_user != ''
